class 학생:
    이름 = ''
    번호 = 0
    키 = 0.0
    몸무게 = 0.0
    def __init__(self,이름,번호,키,몸무게):
        self.학생정보입력(이름,번호,키,몸무게)
    
    # 예를 들어, 이 메서드가 버그가 있어서 수정해야할 경우
    def 학생정보보기 (self):
        print('이름:',self.이름,'번호:',self.번호,'키:',self.키,'몸무게:',self.몸무게)
    
    def 학생정보입력 (self,이름,번호,키,몸무게):
        self.이름=이름
        self.번호=번호
        self.키=키
        self.몸무게=몸무게

# 다른 사람들이 '학생'클래스 사용
# 클래스 업데이트 요청

# 상속 : 사람이 복붙을 하면 사람이 고쳐야하기 때문에, 컴퓨터가 복붙을 해서 컴퓨터가 고치게한다(클래스 복붙)
class 학생2(학생):
    # 학생 클래스의 변수와 메서드를 복붙
    def __del__(self):
        # __del__(self) : 소멸자, 객체가 없어질 때 사용되는 메리트
        print('프로그램 종료')

class 학생3(학생):
    # 학생 클래스가 복붙됨
    def 학생정보보기(self):
        print('이름:',self.이름,'번호:',self.번호,'키:',self.키)
        # 원본 클래스는 '부모 클래스', 복붙받은 클래스는 '자식 클래스'
        # 만약에, 부모와 자식이 메서드명이 겹치면
        # 자신의 메서드가 우선으로  사용된다

a = 학생2('철수',1,177.7,80.0)
a.학생정보보기()

b = 학생3('짱구',2,183.0,85.0)
b.학생정보보기()            #비록 '학생'을 복붙했어도'학생3'의 메서드가 우선적으로 사용됨 (이름겹치면)